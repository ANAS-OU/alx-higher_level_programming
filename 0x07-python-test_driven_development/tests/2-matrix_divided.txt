================================
doctest my ``matrix`` module
================================

This is just a simple module that only has
one simple function ``matrix_divided()``.

Importing my ``matrix_divided`` function

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Matrix Of Numbers
=================
``matrix_divided`` returns the a new matrix of all the elements of the takes one
divided by the <div> argument, that not equa to zero.

::
    >>> matrix_divided([[4, 6, 8],[10, 14, 20]], 2)
    [[2.0, 3.0, 4.0], [5.0, 7.0, 10.0]]

It also working with floating-point values.

::
    >>> matrix_divided([[4.0, 6.0, 8.0], [10.0, 14.0, 20.0]], 2)
    [[2.0, 3.0, 4.0], [5.0, 7.0, 10.0]]

No A Matrix
===========

Given None as a matrix

::
    >>> matrix_divided(None, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Given a mixed list

::
    >>> matrix_divided([[1, 3, 4], "alx best", 100], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
Given list of defferent rows

::
    >>> matrix_divided([[4, 2, 3], [5, 1]], 3)    
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Div By String
=============

the div argument as a string

::
    >>> matrix_divided([[3, 2, 1], [5, 3, 7]], "alx best")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Zero Division
=============

try dividing by zero

::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero